// Code generated by protoc-gen-go. DO NOT EDIT.
// source: workerInternal.proto

package proto

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FlushResponse struct {
	Status               Status   `protobuf:"varint,1,opt,name=status,proto3,enum=kv.proto.Status" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FlushResponse) Reset()         { *m = FlushResponse{} }
func (m *FlushResponse) String() string { return proto.CompactTextString(m) }
func (*FlushResponse) ProtoMessage()    {}
func (*FlushResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8f142f2b1de3db81, []int{0}
}

func (m *FlushResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FlushResponse.Unmarshal(m, b)
}
func (m *FlushResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FlushResponse.Marshal(b, m, deterministic)
}
func (m *FlushResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FlushResponse.Merge(m, src)
}
func (m *FlushResponse) XXX_Size() int {
	return xxx_messageInfo_FlushResponse.Size(m)
}
func (m *FlushResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_FlushResponse.DiscardUnknown(m)
}

var xxx_messageInfo_FlushResponse proto.InternalMessageInfo

func (m *FlushResponse) GetStatus() Status {
	if m != nil {
		return m.Status
	}
	return Status_OK
}

func init() {
	proto.RegisterType((*FlushResponse)(nil), "kv.proto.FlushResponse")
}

func init() {
	proto.RegisterFile("workerInternal.proto", fileDescriptor_8f142f2b1de3db81)
}

var fileDescriptor_8f142f2b1de3db81 = []byte{
	// 181 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x29, 0xcf, 0x2f, 0xca,
	0x4e, 0x2d, 0xf2, 0xcc, 0x2b, 0x49, 0x2d, 0xca, 0x4b, 0xcc, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9,
	0x17, 0xe2, 0xc8, 0x2e, 0x83, 0xb0, 0xa4, 0x78, 0x92, 0xf3, 0x73, 0x73, 0xf3, 0xf3, 0xa0, 0x3c,
	0xe9, 0xf4, 0xfc, 0xfc, 0xf4, 0x9c, 0x54, 0x7d, 0x30, 0x2f, 0xa9, 0x34, 0x4d, 0x3f, 0x35, 0xb7,
	0xa0, 0xa4, 0x12, 0x22, 0xa9, 0x64, 0xc9, 0xc5, 0xeb, 0x96, 0x53, 0x5a, 0x9c, 0x11, 0x94, 0x5a,
	0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0xa4, 0xc1, 0xc5, 0x56, 0x5c, 0x92, 0x58, 0x52, 0x5a, 0x2c,
	0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x67, 0x24, 0xa0, 0x07, 0x33, 0x56, 0x2f, 0x18, 0x2c, 0x1e, 0x04,
	0x95, 0x37, 0x0a, 0xe6, 0x12, 0xf0, 0x0e, 0x0b, 0x47, 0x71, 0x89, 0x90, 0x3d, 0x17, 0x57, 0x72,
	0x46, 0x6a, 0x72, 0x76, 0x41, 0x7e, 0x66, 0x5e, 0x89, 0x90, 0x98, 0x1e, 0xc4, 0x6a, 0x3d, 0x98,
	0xd5, 0x7a, 0xae, 0x20, 0xab, 0xa5, 0xc4, 0x11, 0x66, 0xa2, 0x58, 0xae, 0xc4, 0xe0, 0xc4, 0x1e,
	0xc5, 0x0a, 0x51, 0xcc, 0x06, 0xa6, 0x8c, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xea, 0x36, 0x74,
	0xf3, 0xec, 0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// KVWorkerInternalClient is the client API for KVWorkerInternal service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type KVWorkerInternalClient interface {
	Checkpoint(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*FlushResponse, error)
}

type kVWorkerInternalClient struct {
	cc grpc.ClientConnInterface
}

func NewKVWorkerInternalClient(cc grpc.ClientConnInterface) KVWorkerInternalClient {
	return &kVWorkerInternalClient{cc}
}

func (c *kVWorkerInternalClient) Checkpoint(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*FlushResponse, error) {
	out := new(FlushResponse)
	err := c.cc.Invoke(ctx, "/kv.proto.KVWorkerInternal/checkpoint", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// KVWorkerInternalServer is the server API for KVWorkerInternal service.
type KVWorkerInternalServer interface {
	Checkpoint(context.Context, *empty.Empty) (*FlushResponse, error)
}

// UnimplementedKVWorkerInternalServer can be embedded to have forward compatible implementations.
type UnimplementedKVWorkerInternalServer struct {
}

func (*UnimplementedKVWorkerInternalServer) Checkpoint(ctx context.Context, req *empty.Empty) (*FlushResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Checkpoint not implemented")
}

func RegisterKVWorkerInternalServer(s *grpc.Server, srv KVWorkerInternalServer) {
	s.RegisterService(&_KVWorkerInternal_serviceDesc, srv)
}

func _KVWorkerInternal_Checkpoint_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(KVWorkerInternalServer).Checkpoint(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/kv.proto.KVWorkerInternal/Checkpoint",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(KVWorkerInternalServer).Checkpoint(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

var _KVWorkerInternal_serviceDesc = grpc.ServiceDesc{
	ServiceName: "kv.proto.KVWorkerInternal",
	HandlerType: (*KVWorkerInternalServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "checkpoint",
			Handler:    _KVWorkerInternal_Checkpoint_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "workerInternal.proto",
}
